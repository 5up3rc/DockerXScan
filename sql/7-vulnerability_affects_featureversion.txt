-- Table: public.vulnerability_affects_featureversion

-- DROP TABLE public.vulnerability_affects_featureversion;

CREATE TABLE public.vulnerability_affects_featureversion
(
    id serial,
    vulnerability_id integer NOT NULL,
    featureversion_id integer NOT NULL,
    fixedin_id integer NOT NULL,
    CONSTRAINT vulnerability_affects_featureversion_pkey PRIMARY KEY (id),
    CONSTRAINT vulnerability_affects_feature_vulnerability_id_featureversi_key UNIQUE (vulnerability_id, featureversion_id),
    CONSTRAINT vulnerability_affects_featureversion_featureversion_id_fkey FOREIGN KEY (featureversion_id)
        REFERENCES public.featureversion (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT vulnerability_affects_featureversion_fixedin_id_fkey FOREIGN KEY (fixedin_id)
        REFERENCES public.vulnerability_fixedin_feature (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT vulnerability_affects_featureversion_vulnerability_id_fkey FOREIGN KEY (vulnerability_id)
        REFERENCES public.vulnerability (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.vulnerability_affects_featureversion
    OWNER to postgres;

-- Index: vulnerability_affects_feature_featureversion_id_vulnerabili_idx

-- DROP INDEX public.vulnerability_affects_feature_featureversion_id_vulnerabili_idx;

CREATE INDEX vulnerability_affects_feature_featureversion_id_vulnerabili_idx
    ON public.vulnerability_affects_featureversion USING btree
    (featureversion_id, vulnerability_id)
    TABLESPACE pg_default;

-- Index: vulnerability_affects_featureversion_fixedin_id_idx

-- DROP INDEX public.vulnerability_affects_featureversion_fixedin_id_idx;

CREATE INDEX vulnerability_affects_featureversion_fixedin_id_idx
    ON public.vulnerability_affects_featureversion USING btree
    (fixedin_id)
    TABLESPACE pg_default;